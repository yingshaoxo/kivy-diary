{"version":3,"sources":["protocol/everyday_pb.js","Store.tsx","components/History.tsx","components/ImagePicker.tsx","components/Editor.tsx","components/Search.tsx","App.tsx","web-build/register-service-worker.js"],"names":["jspb","require","goog","global","Function","exportSymbol","proto","OneDay","opt_data","Message","initialize","this","repeatedFields_","inherits","DEBUG","COMPILED","displayName","Content","EveryDay","GENERATE_TO_OBJECT","prototype","toObject","opt_includeInstance","includeInstance","msg","obj","date","getFieldWithDefault","contentList","toObjectList","getContentList","$jspbMessageInstance","deserializeBinary","bytes","reader","BinaryReader","deserializeBinaryFromReader","nextField","isEndGroup","getFieldNumber","value","readString","setDate","readMessage","addContent","skipField","serializeBinary","writer","BinaryWriter","serializeBinaryToWriter","getResultBuffer","message","f","undefined","getDate","length","writeString","writeRepeatedMessage","text","imageList","getRepeatedField","setText","addImage","getText","getImageList","writeRepeatedString","setProto3StringField","setImageList","setField","opt_index","addToRepeatedField","clearImageList","getRepeatedWrapperField","setContentList","setRepeatedWrapperField","opt_value","addToRepeatedWrapperField","clearContentList","onedayList","getOnedayList","addOneday","setOnedayList","clearOnedayList","object","extend","exports","host","Platform","OS","console","log","location","protocol","document","domain","upload_url","get_url","download_url","initialState","platform","urls","oneday_list","fetched_at_boot","data_download_url","store","createContext","reducer","state","action","type","payload","Error","StateProvider","props","useReducer","dispatch","Provider","children","windowWidth","Dimensions","get","width","windowHeight","height","axios","default","messages","make_a_request","a","async","post","then","response","data","sql","catch","error","Images","image_list","images_view","map","image_data_uri","index","push","Image","key","style","styles","image","source","uri","View","images","oneday","content_list","content_view","content","Text","History","useContext","everyday_view","getData","ScrollView","contentContainerStyle","everyday","StyleSheet","create","flexGrow","backgroundColor","marginBottom","textAlign","fontSize","display","flexDirection","justifyContent","alignContent","flexWrap","resizeMode","MyImagePicker","getPermissionAsync","Constants","ios","Permissions","status","alert","_pickImage","ImagePicker","mediaTypes","base64","allowsEditing","aspect","quality","result","cancelled","setImageUriList","imageUriList","toDataUrl","self","mybase64","setImageBase64List","imageBase64List","pickImageButton","Button","title","color","onPress","imageBox","url","callback","xhr","XMLHttpRequest","onload","FileReader","onloadend","readAsDataURL","open","responseType","send","React","chars","Base64","charCode","input","str","output","block","i","charAt","charCodeAt","trim","buffer","binary","Uint8Array","len","byteLength","String","fromCharCode","arrayBufferToBase64","setTimeout","reload","UselessTextInput","TextInput","editable","multiline","numberOfLines","maxLength","Editor","navigation","useState","container","topWhite","topBar","cancelButton","navigate","saveButton","inputBox","textInput","onChangeText","placeholder","imagePicker","flex","alignItems","margin","Search","search_area","download_area","download_button","download_it","download_link","href","Tab","createBottomTabNavigator","App","NavigationContainer","Navigator","initialRouteName","Screen","name","component","navigator","window","addEventListener","serviceWorker","register","scope","info"],"mappings":"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","file":"static/js/app.20c258dc.chunk.js","sourcesContent":["// source: everyday.proto\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\ngoog.exportSymbol('proto.EveryDay', null, global);\ngoog.exportSymbol('proto.OneDay', null, global);\ngoog.exportSymbol('proto.OneDay.Content', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.OneDay = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.OneDay.repeatedFields_, null);\n};\ngoog.inherits(proto.OneDay, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.OneDay.displayName = 'proto.OneDay';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.OneDay.Content = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.OneDay.Content.repeatedFields_, null);\n};\ngoog.inherits(proto.OneDay.Content, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.OneDay.Content.displayName = 'proto.OneDay.Content';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.EveryDay = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.EveryDay.repeatedFields_, null);\n};\ngoog.inherits(proto.EveryDay, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.EveryDay.displayName = 'proto.EveryDay';\n}\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.OneDay.repeatedFields_ = [2];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.OneDay.prototype.toObject = function(opt_includeInstance) {\n  return proto.OneDay.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.OneDay} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.OneDay.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    date: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    contentList: jspb.Message.toObjectList(msg.getContentList(),\n    proto.OneDay.Content.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.OneDay}\n */\nproto.OneDay.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.OneDay;\n  return proto.OneDay.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.OneDay} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.OneDay}\n */\nproto.OneDay.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setDate(value);\n      break;\n    case 2:\n      var value = new proto.OneDay.Content;\n      reader.readMessage(value,proto.OneDay.Content.deserializeBinaryFromReader);\n      msg.addContent(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.OneDay.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.OneDay.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.OneDay} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.OneDay.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getDate();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getContentList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      2,\n      f,\n      proto.OneDay.Content.serializeBinaryToWriter\n    );\n  }\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.OneDay.Content.repeatedFields_ = [3];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.OneDay.Content.prototype.toObject = function(opt_includeInstance) {\n  return proto.OneDay.Content.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.OneDay.Content} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.OneDay.Content.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    date: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    text: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    imageList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.OneDay.Content}\n */\nproto.OneDay.Content.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.OneDay.Content;\n  return proto.OneDay.Content.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.OneDay.Content} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.OneDay.Content}\n */\nproto.OneDay.Content.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setDate(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setText(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.addImage(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.OneDay.Content.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.OneDay.Content.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.OneDay.Content} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.OneDay.Content.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getDate();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getText();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getImageList();\n  if (f.length > 0) {\n    writer.writeRepeatedString(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string date = 1;\n * @return {string}\n */\nproto.OneDay.Content.prototype.getDate = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.OneDay.Content} returns this\n */\nproto.OneDay.Content.prototype.setDate = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string text = 2;\n * @return {string}\n */\nproto.OneDay.Content.prototype.getText = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.OneDay.Content} returns this\n */\nproto.OneDay.Content.prototype.setText = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * repeated string image = 3;\n * @return {!Array<string>}\n */\nproto.OneDay.Content.prototype.getImageList = function() {\n  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));\n};\n\n\n/**\n * @param {!Array<string>} value\n * @return {!proto.OneDay.Content} returns this\n */\nproto.OneDay.Content.prototype.setImageList = function(value) {\n  return jspb.Message.setField(this, 3, value || []);\n};\n\n\n/**\n * @param {string} value\n * @param {number=} opt_index\n * @return {!proto.OneDay.Content} returns this\n */\nproto.OneDay.Content.prototype.addImage = function(value, opt_index) {\n  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.OneDay.Content} returns this\n */\nproto.OneDay.Content.prototype.clearImageList = function() {\n  return this.setImageList([]);\n};\n\n\n/**\n * optional string date = 1;\n * @return {string}\n */\nproto.OneDay.prototype.getDate = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.OneDay} returns this\n */\nproto.OneDay.prototype.setDate = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * repeated Content content = 2;\n * @return {!Array<!proto.OneDay.Content>}\n */\nproto.OneDay.prototype.getContentList = function() {\n  return /** @type{!Array<!proto.OneDay.Content>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.OneDay.Content, 2));\n};\n\n\n/**\n * @param {!Array<!proto.OneDay.Content>} value\n * @return {!proto.OneDay} returns this\n*/\nproto.OneDay.prototype.setContentList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 2, value);\n};\n\n\n/**\n * @param {!proto.OneDay.Content=} opt_value\n * @param {number=} opt_index\n * @return {!proto.OneDay.Content}\n */\nproto.OneDay.prototype.addContent = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.OneDay.Content, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.OneDay} returns this\n */\nproto.OneDay.prototype.clearContentList = function() {\n  return this.setContentList([]);\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.EveryDay.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.EveryDay.prototype.toObject = function(opt_includeInstance) {\n  return proto.EveryDay.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.EveryDay} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.EveryDay.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    onedayList: jspb.Message.toObjectList(msg.getOnedayList(),\n    proto.OneDay.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.EveryDay}\n */\nproto.EveryDay.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.EveryDay;\n  return proto.EveryDay.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.EveryDay} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.EveryDay}\n */\nproto.EveryDay.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.OneDay;\n      reader.readMessage(value,proto.OneDay.deserializeBinaryFromReader);\n      msg.addOneday(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.EveryDay.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.EveryDay.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.EveryDay} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.EveryDay.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getOnedayList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.OneDay.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated OneDay oneday = 1;\n * @return {!Array<!proto.OneDay>}\n */\nproto.EveryDay.prototype.getOnedayList = function() {\n  return /** @type{!Array<!proto.OneDay>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.OneDay, 1));\n};\n\n\n/**\n * @param {!Array<!proto.OneDay>} value\n * @return {!proto.EveryDay} returns this\n*/\nproto.EveryDay.prototype.setOnedayList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.OneDay=} opt_value\n * @param {number=} opt_index\n * @return {!proto.OneDay}\n */\nproto.EveryDay.prototype.addOneday = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.OneDay, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.EveryDay} returns this\n */\nproto.EveryDay.prototype.clearOnedayList = function() {\n  return this.setOnedayList([]);\n};\n\n\ngoog.object.extend(exports, proto);\n","import React, {createContext, useReducer} from 'react';\nimport { Platform } from 'react-native'\n\nlet host = \"http://127.0.0.1\"\nlet port = \"8888\"\nif (Platform.OS == \"web\") {\n  console.log(\"hi, web\")\n  host = location.protocol + '//' + document.domain + ':' + port //location.protocol + '//' + document.domain + ':' + location.port\n} else {\n  //host = 'http://' + \"192.168.31.38\" + ':' + port\n  host = 'http://' + \"192.168.49.31\" + ':' + port\n}\n\nconst upload_url = host + \"/api/v1/upload\"\nconst get_url = host + \"/api/v1/get\"\nconst download_url = host + \"/api/v1/download\"\n\nconst initialState = {\n    platform: Platform.OS,\n    urls: {\n        host: host,\n        upload_url: upload_url,\n        get_url: get_url,\n        download_url,\n    },\n    oneday_list: [],\n    fetched_at_boot: false,\n    data_download_url: undefined,\n};\nexport const store = createContext(null);\n\nconst reducer = (state, action) => {\nswitch(action.type) {\n    case 'setOnedayList':\n      return {\n        ...state,\n        oneday_list: action.payload,\n        fetched_at_boot: true,\n      };\n    case 'setDataDownloadUrl':\n      return {\n        ...state,\n        data_download_url: action.payload,\n      };\n    default:\n      throw new Error();\n  }\n};\n\nexport const StateProvider = props => {\n    const [state, dispatch] = useReducer(reducer, initialState)\n\n    return (\n        <store.Provider value={[ state, dispatch ]}>\n            {props.children}\n        </store.Provider>\n    )\n}","import React, { useContext, useEffect, useState } from 'react';\nimport { StyleSheet, Text, View, ScrollView, Image } from 'react-native';\nimport { TextInput, Button } from 'react-native';\n\nimport { Dimensions } from 'react-native';\nconst windowWidth = Dimensions.get('window').width;\nconst windowHeight = Dimensions.get('window').height;\n\nimport { store } from '../Store';\n\nconst axios = require('axios').default;\nvar messages = require('../protocol/everyday_pb');\n\nasync function make_a_request(state) {\n  return axios.post(state.urls.get_url, {\n    action: 'get_everyday',\n  })\n  .then(function (response: any) {\n    //console.log(response);\n    let data = response.data;\n    let everyday = messages.EveryDay.deserializeBinary(data.sql)\n    //console.log(everyday)\n    let oneday_list = everyday.getOnedayList()\n    //console.log(oneday_list)\n    /*\n    oneday_list.map((oneday) => {\n      console.log(oneday.getDate())\n      let contents = oneday.getContentList()\n      contents.map((content, index) => {\n        let images = content.getImageList()\n        if (images) {\n          images.map((image, index) => {\n            console.log(image)\n          })\n        }\n      })\n    })\n    */\n    return oneday_list\n  })\n  .catch(function (error: any) {\n    console.log(error);\n  });\n}\n\nfunction Images(props) {\n  let {image_list} = props\n  let images_view = []\n\n  image_list.map((image_data_uri, index) => {\n    images_view.push(\n      <Image\n        key={index}\n        style={styles.image}\n        source={{\n          uri: image_data_uri\n        }}\n      />\n    )\n  })\n\n  return (\n    <View\n      style={styles.images}\n    >\n      {images_view}\n    </View>\n  )\n}\n\nfunction OneDay(props) {\n  let {oneday} = props\n  let content_list = oneday.getContentList()\n\n  let content_view = []\n  content_list.map((content, index) => {\n    //console.log(content.getImageList())\n    content_view.push(\n      <View\n        style={styles.content}\n        key={index}\n      >\n\n        <Text\n          style={styles.text}\n        >\n          {content.getText()}\n        </Text>\n\n        <Images\n          image_list={content.getImageList()}\n        >\n        </Images>\n\n      </View>\n    )\n  })\n\n  return (\n    <View\n      style={styles.oneday}\n    >\n      <Text\n        style={styles.date}\n      >{oneday.getDate()}\n      </Text>\n\n      {content_view}\n    </View>\n  )\n}\n\nexport default function History() {\n  const [state, dispatch] = useContext(store)\n\n  async function getData() {\n    let oneday_list = await make_a_request(state)\n    dispatch({type: \"setOnedayList\", payload: oneday_list})\n  }\n\n  let everyday_view = []\n  if (state.fetched_at_boot == false) {\n    getData()\n  } else {\n    state.oneday_list.map((oneday, index) => {\n      //console.log(oneday.getDate())\n      everyday_view.push(\n        <OneDay\n          key={index}\n          oneday={oneday}\n        >\n        </OneDay>\n      )\n    })\n  }\n\n  return (\n    <ScrollView\n      contentContainerStyle={styles.everyday}\n    >\n      {everyday_view}\n    </ScrollView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  everyday: {\n    flexGrow: 1,\n    backgroundColor: \"#ECEFF1\",\n  },\n  oneday: {\n    width: windowWidth,\n    marginBottom: 2/100 * windowHeight,\n    backgroundColor: \"#fff\",\n  },\n  date: {\n    textAlign: 'center', // <-- the magic\n    marginBottom: 4/100 * windowHeight,\n  },\n  content: {\n  },\n  text: {\n    textAlign: 'center', // <-- the magic\n    fontSize: 20,\n    marginBottom: 4/100 * windowHeight,\n  },\n  images: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignContent: \"stretch\",\n    flexWrap: \"wrap\",\n  },\n  image: {\n    width: 33.3/100*windowWidth, \n    height: 33.3/100*windowWidth,\n    resizeMode: 'contain',\n  }\n});","import * as React from 'react';\nimport { Button, Image, View } from 'react-native';\nimport * as ImagePicker from 'expo-image-picker';\nimport Constants from 'expo-constants';\nimport * as Permissions from 'expo-permissions';\n\nimport {Dimensions} from 'react-native';\nconst windowWidth = Dimensions.get('window').width;\nconst windowHeight = Dimensions.get('window').height;\n\nimport { StyleSheet } from 'react-native';\n\ntype MyImagePickerProps = {\n  imageUriList: Array<String>\n  setImageUriList: Function\n  imageBase64List: Array<String>\n  setImageBase64List: Function\n}\n\nexport default class MyImagePicker extends React.Component<MyImagePickerProps> {\n  render() {\n    return (\n      <View \n        {...this.props}\n      >\n        <View\n          style={styles.pickImageButton}\n        >\n          <Button \n            title=\"Pick an image\" \n            color=\"#FFCC80\"\n            onPress={this._pickImage} \n          />\n        </View>\n\n        <View\n          style={styles.imageBox}\n        >\n          {\n            this.props.imageUriList.map((value, index) => {\n                return (\n                  <View\n                    style={styles.image}\n                    key={index}\n                  >\n                    <Image key={index} source={{ uri: value }} style={styles.image}/>\n                  </View>\n                )\n            })\n          }\n        </View>\n      </View>\n    );\n  }\n\n  componentDidMount() {\n    this.getPermissionAsync();\n  }\n\n  getPermissionAsync = async () => {\n    if (Constants.platform.ios) {\n      const { status } = await Permissions.askAsync(Permissions.CAMERA_ROLL);\n      if (status !== 'granted') {\n        alert('Sorry, we need camera roll permissions to make this work!');\n      }\n    }\n  };\n\n  toDataUrl(url: string, callback: Function) {\n      let self = this\n      var xhr = new XMLHttpRequest();\n      xhr.onload = function() {\n          var reader = new FileReader();\n          reader.onloadend = function() {\n              callback(self, reader.result);\n          }\n          reader.readAsDataURL(xhr.response);\n      };\n      xhr.open('GET', url);\n      xhr.responseType = 'blob';\n      xhr.send();\n  }\n\n  _pickImage = async () => {\n    try {\n      let result = await ImagePicker.launchImageLibraryAsync({\n        mediaTypes: ImagePicker.MediaTypeOptions.Images,\n        base64: true,\n        allowsEditing: true,\n        aspect: [4, 3],\n        quality: 1,\n      });\n      if (!result.cancelled) {\n        this.props.setImageUriList([...this.props.imageUriList, result.uri])\n        //console.log(result[\"base64\"]) //It should work, but not\n        this.toDataUrl(result.uri, function(self, mybase64) {\n          self.props.setImageBase64List([...self.props.imageBase64List, mybase64])\n          //console.log(mybase64)\n        })\n      }\n    } catch (E) {\n      console.log(E);\n    }\n  };\n}\n\nconst styles = StyleSheet.create({\n  pickImageButton: {\n    marginBottom: 0.5/100*windowHeight,\n  },\n  imageBox: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"flex-start\",\n    alignContent: \"stretch\",\n    flexWrap: \"wrap\",\n  },\n  image: {\n    width: 33.3/100*windowWidth, \n    height: 33.3/100*windowWidth,\n  }\n});\n","import React, { useContext } from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { TextInput, Button } from 'react-native';\n\nimport { Dimensions } from 'react-native';\nconst windowWidth = Dimensions.get('window').width;\nconst windowHeight = Dimensions.get('window').height;\n\nimport { store } from '../Store';\nimport MyImagePicker from \"./ImagePicker\";\n\nconst axios = require('axios').default;\nvar messages = require('../protocol/everyday_pb');\n\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\nconst Base64 = {\n  btoa: (input: string = '') => {\n    let str = input;\n    let output = '';\n\n    for (let block = 0, charCode, i = 0, map = chars;\n      str.charAt(i | 0) || (map = '=', i % 1);\n      output += map.charAt(63 & block >> 8 - i % 1 * 8)) {\n\n      charCode = str.charCodeAt(i += 3 / 4);\n\n      if (charCode > 0xFF) {\n        throw new Error(\"'btoa' failed: The string to be encoded contains characters outside of the Latin1 range.\");\n      }\n\n      block = block << 8 | charCode;\n    }\n\n    return output;\n  },\n\n  atob: (input: string = '') => {\n    let str = input.replace(/=+$/, '');\n    let output = '';\n\n    if (str.length % 4 == 1) {\n      throw new Error(\"'atob' failed: The string to be decoded is not correctly encoded.\");\n    }\n    for (let bc = 0, bs = 0, buffer, i = 0;\n      buffer = str.charAt(i++);\n\n      ~buffer && (bs = bc % 4 ? bs * 64 + buffer : buffer,\n        bc++ % 4) ? output += String.fromCharCode(255 & bs >> (-2 * bc & 6)) : 0\n    ) {\n      buffer = chars.indexOf(buffer);\n    }\n\n    return output;\n  }\n};\n\nfunction arrayBufferToBase64(buffer: Iterable<number>) {\n  let binary = '';\n  let bytes = new Uint8Array(buffer);\n  let len = bytes.byteLength;\n  for (let i = 0; i < len; i++) {\n    binary += String.fromCharCode(bytes[i]);\n  }\n  return Base64.btoa(Base64.btoa(binary));\n}\n\nfunction make_a_request(url: String, text: String, imageBase64List: Array<String>) {\n  var oneday = new messages.OneDay()\n  let content = oneday.addContent()\n  content.setText(text.trim())\n  content.setImageList(imageBase64List)\n  let data = oneday.serializeBinary()\n  data = arrayBufferToBase64(data)\n  //console.log(data)\n  axios.post(url, {\n    action: 'oneday',\n    data: data,\n  })\n  .then(function (response: any) {\n    console.log(response);\n    setTimeout(()=>{\n      location.reload();\n    }, 1000)\n  })\n  .catch(function (error: any) {\n    console.log(error);\n  });\n}\n\nfunction UselessTextInput(props) {\n  return (\n    <TextInput\n      {...props} // Inherit any props passed to it; e.g., multiline, numberOfLines below\n      editable\n      multiline\n      numberOfLines={8}\n      maxLength={40}\n    />\n  );\n}\n\nexport default function Editor( {navigation} ) {\n  const [text, setText] = React.useState<String>('');\n  const [imageUriList, setImageUriList] = React.useState<Array<String>>([]);\n  const [imageBase64List, setImageBase64List] = React.useState<Array<String>>([]);\n\n  const [state, dispatch] = useContext(store)\n\n  return (\n    <View style={styles.container}>\n      <View\n        style={styles.topWhite}\n      >\n      </View>\n\n      <View\n        style={styles.topBar}\n      >\n        <View\n          style={styles.cancelButton}\n        >\n          <Button\n            title=\"Cancel\"\n            color=\"#90A4AE\"\n            onPress={() => {\n              //make_a_request(text, imageUriList)\n              setText(\"\")\n              setImageUriList([])\n              setImageBase64List([])\n              navigation.navigate('Your History')\n            }}\n          >\n          </Button>\n        </View>\n        <View\n          style={styles.saveButton}\n        >\n          <Button\n            title=\"Save\"\n            color=\"#FF5252\"\n            onPress={() => {\n              make_a_request(state.urls.upload_url, text, imageBase64List)\n              navigation.navigate('Your History')\n            }}\n          />\n        </View>\n      </View>\n\n      <View\n        style={styles.inputBox}\n      >\n        <UselessTextInput\n          style={styles.textInput}\n          onChangeText={(text: string) => {\n            setText(text)\n          }}\n          value={text}\n          placeholder={\"What's happenning?\"}\n        />\n      </View>\n\n      <MyImagePicker\n        style={styles.imagePicker}\n        imageUriList={imageUriList}\n        setImageUriList={setImageUriList}\n        imageBase64List={imageBase64List}\n        setImageBase64List={setImageBase64List}\n      />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n\n  topWhite: {\n    //flex: 0.5,\n    //backgroundColor: \"#fff\",\n  },\n\n  topBar: {\n    //https://reactnative.dev/docs/flexbox\n    flex: 0.8,\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    //backgroundColor: \"#81D4FA\"\n  },\n  cancelButton: {\n    width: 20 / 100 * windowWidth,\n    justifyContent: \"center\",\n  },\n  saveButton: {\n    width: 20 / 100 * windowWidth,\n    justifyContent: \"center\",\n  },\n\n  inputBox: {\n    flex: 6,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    margin: 2 / 100 * windowHeight,\n    //backgroundColor: \"#E57373\",\n  },\n  textInput: {\n    fontSize: 24,\n  },\n\n  imagePicker: {\n    flex: 10,\n    justifyContent: \"flex-start\",\n    //backgroundColor: \"#AB47BC\"\n  },\n});","import React, { useContext, useEffect, useState } from 'react';\nimport { StyleSheet, Text, View, ScrollView, Image } from 'react-native';\nimport { TextInput, Button } from 'react-native';\n\nimport { Dimensions } from 'react-native';\nconst windowWidth = Dimensions.get('window').width;\nconst windowHeight = Dimensions.get('window').height;\n\nimport { store } from '../Store';\n\nconst axios = require('axios').default;\n\nasync function make_a_request(state) {\n  return axios.post(state.urls.download_url, {\n    action: 'get_everyday',\n  })\n  .then(function (response: any) {\n    //console.log(response);\n    let data = response.data;\n    return data\n  })\n  .catch(function (error: any) {\n    console.log(error);\n  });\n}\n\nasync function download_it(state, dispatch) {\n  /*\n  let string = await make_a_request(state)\n  string = string.sql\n  var file;\n  var data = [];\n  data.push(string);\n  var properties = {type: 'text/plain'}; // Specify the file's mime-type.\n  try {\n    // Specify the filename using the File constructor, but ...\n    file = new File(data, \"data.txt\", properties);\n  } catch (e) {\n    // ... fall back to the Blob constructor if that isn't supported.\n    file = new Blob(data, properties);\n  }\n  var url = URL.createObjectURL(file);\n  console.log(url)\n  */\n  let url = state.urls.download_url\n  if (state.data_download_url == undefined) {\n    dispatch({type: \"setDataDownloadUrl\", payload: url})\n  }\n}\n\nexport default function Search() {\n  const [state, dispatch] = useContext(store)\n\n  return (\n    <View\n      style={styles.container}\n    >\n      <View\n        style={styles.search_area}\n      >\n\n      </View>\n      <View\n        style={styles.download_area}\n      >\n        {\n        state.data_download_url==undefined? \n        <View\n          style={styles.download_button}\n        >\n          <Button\n            title=\"Download Your Data\"\n            color=\"#90A4AE\"\n            onPress={() => {\n              download_it(state, dispatch)\n            }}\n          >\n          </Button>\n        </View>\n        :\n        <View\n          style={styles.download_link}\n        >\n          <a href={state.data_download_url}>\n            {state.data_download_url}\n          </a>\n        </View>\n        }\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexGrow: 1,\n  },\n  search_area: {\n    flex: 1,\n    backgroundColor: \"#E1F5FE\",\n  },\n  download_area: {\n    flex: 1,\n    alignItems: \"center\",\n    //backgroundColor: \"#000\",\n    backgroundColor: \"#FCE4EC\",\n  },\n  download_button: {\n    flex: 1,\n    flexDirection: \"column\",\n    justifyContent:\"center\",\n    width: 50/100 * windowWidth,\n  },\n  download_link: {\n    flex: 1,\n    flexDirection: \"column\",\n    justifyContent:\"center\",\n  },\n});","import React, { useState, useContext } from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { TextInput, Button } from 'react-native';\n\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\n//import { createStackNavigator } from '@react-navigation/stack';\n//import { createDrawerNavigator } from '@react-navigation/drawer';\n//const Stack = createStackNavigator();\n//const Drawer = createDrawerNavigator();\nconst Tab = createBottomTabNavigator();\n\nimport { StateProvider } from './Store';\nimport History from \"./components/History\";\nimport Editor from \"./components/Editor\";\nimport Search from \"./components/Search\";\n\nexport default function App() {\n  return (\n    <StateProvider>\n      <NavigationContainer>\n        <Tab.Navigator initialRouteName=\"Your History\">\n          <Tab.Screen name=\"Your History\" component={History} />\n          <Tab.Screen name=\"Add More\" component={Editor} />\n          <Tab.Screen name=\"Search\" component={Search} />\n        </Tab.Navigator>\n      </NavigationContainer>\n    </StateProvider>\n  );\n}","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function() {\n    navigator.serviceWorker\n      .register('/ui/expo-service-worker.js', { scope: '/ui/' })\n      .then(function(info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function(error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n"],"sourceRoot":""}