{"version":3,"sources":["Store.tsx","components/History.tsx","components/ImagePicker.tsx","components/Editor.tsx","components/Search.tsx","App.tsx","web-build/register-service-worker.js","protocol/everyday_pb.js"],"names":["host","Platform","OS","console","log","location","protocol","document","domain","upload_url","get_url","initialState","platform","urls","oneday_list","fetched_at_boot","store","createContext","reducer","state","action","type","payload","Error","StateProvider","props","useReducer","dispatch","Provider","value","children","windowWidth","Dimensions","get","width","windowHeight","height","axios","require","default","messages","make_a_request","a","async","post","then","response","data","EveryDay","deserializeBinary","sql","getOnedayList","catch","error","Images","image_list","images_view","map","image_data_uri","index","push","Image","key","style","styles","image","source","uri","View","images","OneDay","oneday","content_list","getContentList","content_view","content","Text","text","getText","getImageList","date","getDate","History","useContext","everyday_view","getData","ScrollView","contentContainerStyle","flexGrow","everyday","StyleSheet","create","flex","flexDirection","justifyContent","marginVertical","backgroundColor","textAlign","marginBottom","display","alignContent","flexWrap","resizeMode","MyImagePicker","getPermissionAsync","Constants","ios","Permissions","status","alert","_pickImage","ImagePicker","mediaTypes","base64","allowsEditing","aspect","quality","result","cancelled","setImageUriList","imageUriList","toDataUrl","self","mybase64","setImageBase64List","imageBase64List","this","pickImageButton","Button","title","color","onPress","imageBox","url","callback","xhr","XMLHttpRequest","onload","reader","FileReader","onloadend","readAsDataURL","open","responseType","send","React","chars","Base64","charCode","input","str","output","block","i","charAt","charCodeAt","addContent","setText","setImageList","serializeBinary","buffer","binary","bytes","Uint8Array","len","byteLength","String","fromCharCode","arrayBufferToBase64","setTimeout","reload","UselessTextInput","TextInput","editable","multiline","numberOfLines","maxLength","Editor","navigation","useState","container","topWhite","topBar","cancelButton","navigate","saveButton","inputBox","textInput","onChangeText","placeholder","imagePicker","alignItems","margin","fontSize","Search","search_area","download_area","download_button","window","Tab","createBottomTabNavigator","App","NavigationContainer","Navigator","initialRouteName","Screen","name","component","navigator","addEventListener","serviceWorker","register","scope","info","jspb","goog","global","Function","exportSymbol","proto","opt_data","Message","initialize","repeatedFields_","inherits","DEBUG","COMPILED","displayName","Content","GENERATE_TO_OBJECT","prototype","toObject","opt_includeInstance","includeInstance","msg","obj","getFieldWithDefault","contentList","toObjectList","$jspbMessageInstance","BinaryReader","deserializeBinaryFromReader","nextField","isEndGroup","getFieldNumber","readString","setDate","readMessage","skipField","writer","BinaryWriter","serializeBinaryToWriter","getResultBuffer","message","f","undefined","length","writeString","writeRepeatedMessage","imageList","getRepeatedField","addImage","writeRepeatedString","setProto3StringField","setField","opt_index","addToRepeatedField","clearImageList","getRepeatedWrapperField","setContentList","setRepeatedWrapperField","opt_value","addToRepeatedWrapperField","clearContentList","onedayList","addOneday","setOnedayList","clearOnedayList","object","extend","exports"],"mappings":"mYAGA,IAAIA,EAAO,mBAEQ,OAAfC,IAASC,IACXC,QAAQC,IAAI,WACZJ,EAAOK,SAASC,SAAW,KAAOC,SAASC,OAApCH,SAGPL,EAAO,4BAGT,IAAMS,EAAaT,EAAO,iBACpBU,EAAUV,EAAO,cAEjBW,EAAe,CACjBC,SAAUX,IAASC,GACnBW,KAAM,CACFb,KAAMA,EACNS,WAAYA,EACZC,QAASA,GAEbI,YAAa,GACbC,iBAAiB,GAERC,EAAQC,wBAAc,MAE7BC,EAAU,SAACC,EAAOC,GACxB,OAAOA,EAAOC,MACV,IAAK,gBACH,O,iWAAO,CAAP,GACKF,EADL,CAEEL,YAAaM,EAAOE,QACpBP,iBAAiB,IAErB,QACE,MAAM,IAAIQ,QAIHC,EAAgB,SAAAC,GAAU,IAAD,EACRC,qBAAWR,EAASP,GADZ,WAC3BQ,EAD2B,KACpBQ,EADoB,KAGlC,OACI,kBAACX,EAAMY,SAAP,CAAgBC,MAAO,CAAEV,EAAOQ,IAC3BF,EAAMK,W,8DCzCbC,EAAcC,IAAWC,IAAI,UAAUC,MACvCC,EAAeH,IAAWC,IAAI,UAAUG,OAIxCC,EAAQC,EAAQ,IAASC,QAC3BC,EAAWF,EAAQ,IAEvB,SAAeG,EAAetB,GAA9B,SAAAuB,EAAAC,OAAA,yEACSN,EAAMO,KAAKzB,EAAMN,KAAKH,QAAS,CACpCU,OAAQ,iBAETyB,MAAK,SAAUC,GAEd,IAAIC,EAAOD,EAASC,KAmBpB,OAlBeP,EAASQ,SAASC,kBAAkBF,EAAKG,KAE7BC,mBAkB5BC,OAAM,SAAUC,GACflD,QAAQC,IAAIiD,OA5BhB,4DAgCA,SAASC,EAAO7B,GAAQ,IACjB8B,EAAc9B,EAAd8B,WACDC,EAAc,GAclB,OAZAD,EAAWE,KAAI,SAACC,EAAgBC,GAC9BH,EAAYI,KACV,kBAACC,EAAA,EAAD,CACEC,IAAKH,EACLI,MAAOC,EAAOC,MACdC,OAAQ,CACNC,IAAKT,SAOX,kBAACU,EAAA,EAAD,CACEL,MAAOC,EAAOK,QAEbb,GAKP,SAASc,EAAO7C,GAAQ,IACjB8C,EAAU9C,EAAV8C,OACDC,EAAeD,EAAOE,iBAEtBC,EAAe,GAwBnB,OAvBAF,EAAaf,KAAI,SAACkB,EAAShB,GAEzBe,EAAad,KACX,kBAACQ,EAAA,EAAD,CACEL,MAAOC,EAAOW,QACdb,IAAKH,GAGL,kBAACiB,EAAA,EAAD,CACEb,MAAOC,EAAOa,MAEbF,EAAQG,WAGX,kBAACxB,EAAD,CACEC,WAAYoB,EAAQI,sBAS1B,kBAACX,EAAA,EAAD,CACEL,MAAOC,EAAOO,QAEd,kBAACK,EAAA,EAAD,CACEb,MAAOC,EAAOgB,MACdT,EAAOU,WAGRP,GAKQ,SAASQ,IAAW,IAAD,EACNC,qBAAWnE,GADL,WACzBG,EADyB,KAClBQ,EADkB,KAQhC,IAAIyD,EAAgB,GAgBpB,OAf6B,GAAzBjE,EAAMJ,gBANV,mBAAA2B,EAAAC,OAAA,kEAAAD,EAAA,MAC0BD,EAAetB,IADzC,OACML,EADN,OAEEa,EAAS,CAACN,KAAM,gBAAiBC,QAASR,IAF5C,4DAOEuE,GAEAlE,EAAML,YAAY2C,KAAI,SAACc,EAAQZ,GAE7ByB,EAAcxB,KACZ,kBAACU,EAAD,CACER,IAAKH,EACLY,OAAQA,QAQd,kBAACe,EAAA,EAAD,CACEC,sBAAuB,CAAEC,SAAU,IAEnC,kBAACpB,EAAA,EAAD,CAAML,MAAOC,EAAOyB,UACfL,IAMX,IAAMpB,EAAS0B,IAAWC,OAAO,CAC/BF,SAAU,CAERG,KAAM,EACNC,cAAe,SAEfC,eAAgB,cAElBvB,OAAQ,CACNrC,MAAOH,EACPgE,eAAgB,IAAQ5D,EACxB6D,gBAAiB,QAEnBhB,KAAM,CACJiB,UAAW,SACXC,aAAc,IAAQ/D,GAExBwC,QAAS,GAETE,KAAM,CACJoB,UAAW,UAEb5B,OAAQ,CACN8B,QAAS,OACTN,cAAe,MACfC,eAAgB,SAChBM,aAAc,UACdC,SAAU,QAEZpC,MAAO,CACL/B,MAAO,KAAK,IAAIH,EAChBK,OAAQ,KAAK,IAAIL,EACjBuE,WAAY,a,0aC5KhB,IAAMvE,GAAcC,IAAWC,IAAI,UAAUC,MACvCC,GAAeH,IAAWC,IAAI,UAAUG,OAWzBmE,G,0UAwCnBC,mBAAqB,0BAAA9D,EAAAC,OAAA,oDACf8D,KAAU7F,SAAS8F,IADJ,kCAAAhE,EAAA,MAEQiE,KAAqBA,OAF7B,gBAGF,YAHE,EAETC,QAENC,MAAM,6DAJS,6D,EAwBrBC,WAAa,0BAAApE,EAAAC,OAAA,2EAAAD,EAAA,MAEUqE,IAAoC,CACrDC,WAAYD,KAA6BzD,OACzC2D,QAAQ,EACRC,eAAe,EACfC,OAAQ,CAAC,EAAG,GACZC,QAAS,KAPF,QAELC,EAFK,QASGC,YACV,EAAK7F,MAAM8F,gBAAX,cAA+B,EAAK9F,MAAM+F,cAA1C,CAAwDH,EAAOlD,OAE/D,EAAKsD,UAAUJ,EAAOlD,KAAK,SAASuD,EAAMC,GACxCD,EAAKjG,MAAMmG,mBAAX,cAAkCF,EAAKjG,MAAMoG,iBAA7C,CAA8DF,SAbzD,gDAkBTxH,QAAQC,IAAR,MAlBS,iE,+CA9DX,OACE,gBAACgE,EAAA,EACK0D,KAAKrG,MAET,gBAAC2C,EAAA,EAAD,CACEL,MAAOC,GAAO+D,iBAEd,gBAACC,EAAA,EAAD,CACEC,MAAM,gBACNC,MAAM,UACNC,QAASL,KAAKhB,cAIlB,gBAAC1C,EAAA,EAAD,CACEL,MAAOC,GAAOoE,UAGZN,KAAKrG,MAAM+F,aAAa/D,KAAI,SAAC5B,EAAO8B,GAChC,OACE,gBAACS,EAAA,EAAD,CACEL,MAAOC,GAAOC,MACdH,IAAKH,GAEL,gBAACE,EAAA,EAAD,CAAOC,IAAKH,EAAOO,OAAQ,CAAEC,IAAKtC,GAASkC,MAAOC,GAAOC,gB,0CAWzE6D,KAAKtB,uB,gCAYG6B,EAAaC,GACnB,IAAIZ,EAAOI,KACPS,EAAM,IAAIC,eACdD,EAAIE,OAAS,WACT,IAAIC,EAAS,IAAIC,WACjBD,EAAOE,UAAY,WACfN,EAASZ,EAAMgB,EAAOrB,SAE1BqB,EAAOG,cAAcN,EAAIzF,WAE7ByF,EAAIO,KAAK,MAAOT,GAChBE,EAAIQ,aAAe,OACnBR,EAAIS,W,GA7DiCC,aAuFrCjF,GAAS0B,IAAWC,OAAO,CAC/BoC,gBAAiB,CACf7B,aAAc,KAAQ/D,IAExBiG,SAAU,CACRjC,QAAS,OACTN,cAAe,MACfC,eAAgB,aAChBM,aAAc,UACdC,SAAU,QAEZpC,MAAO,CACL/B,MAAO,KAAK,IAAIH,GAChBK,OAAQ,KAAK,IAAIL,MClHfA,GAAcC,IAAWC,IAAI,UAAUC,MACvCC,GAAeH,IAAWC,IAAI,UAAUG,OAKxCC,GAAQC,EAAQ,IAASC,QAC3BC,GAAWF,EAAQ,IAEjB4G,GAAQ,oEACRC,GACE,WAIJ,IAJ6B,IAITC,EAJfC,EAAuB,uDAAP,GACjBC,EAAMD,EACNE,EAAS,GAEJC,EAAQ,EAAaC,EAAI,EAAGhG,EAAMyF,GACzCI,EAAII,OAAW,EAAJD,KAAWhG,EAAM,IAAKgG,EAAI,GACrCF,GAAU9F,EAAIiG,OAAO,GAAKF,GAAS,EAAIC,EAAI,EAAI,GAAI,CAInD,IAFAL,EAAWE,EAAIK,WAAWF,GAAK,EAAI,IAEpB,IACb,MAAM,IAAIlI,MAAM,4FAGlBiI,EAAQA,GAAS,EAAIJ,EAGvB,OAAOG,GAiCX,SAAS9G,GAAe4F,EAAaxD,EAAcgD,GACjD,IAAItD,EAAS,IAAI/B,GAAS8B,OACtBK,EAAUJ,EAAOqF,aACrBjF,EAAQkF,QAAQhF,GAChBF,EAAQmF,aAAajC,GACrB,IAAI9E,EAAOwB,EAAOwF,kBAClBhH,EAhBF,SAA6BiH,GAI3B,IAHA,IAAIC,EAAS,GACTC,EAAQ,IAAIC,WAAWH,GACvBI,EAAMF,EAAMG,WACPZ,EAAI,EAAGA,EAAIW,EAAKX,IACvBQ,GAAUK,OAAOC,aAAaL,EAAMT,IAEtC,OAAON,GAAYA,GAAYc,IASxBO,CAAoBzH,GAE3BV,GAAMO,KAAKyF,EAAK,CACdjH,OAAQ,SACR2B,KAAMA,IAEPF,MAAK,SAAUC,GACd3C,QAAQC,IAAI0C,GACZ2H,YAAW,WACTpK,SAASqK,WACR,QAEJtH,OAAM,SAAUC,GACflD,QAAQC,IAAIiD,MAIhB,SAASsH,GAAiBlJ,GACxB,OACE,kBAACmJ,EAAA,EAAD,OACMnJ,EADN,CAEEoJ,UAAQ,EACRC,WAAS,EACTC,cAAe,EACfC,UAAW,MAKF,SAASC,GAAT,GAAiC,IAAfC,EAAc,EAAdA,WAAc,EACrBjC,IAAMkC,SAAiB,IADF,WACtCtG,EADsC,KAChCgF,EADgC,OAELZ,IAAMkC,SAAwB,IAFzB,WAEtC3D,EAFsC,KAExBD,EAFwB,OAGC0B,IAAMkC,SAAwB,IAH/B,WAGtCtD,EAHsC,KAGrBD,EAHqB,OAKnBzC,qBAAWnE,GALQ,WAKtCG,EALsC,UAO7C,OACE,kBAACiD,EAAA,EAAD,CAAML,MAAOC,GAAOoH,WAClB,kBAAChH,EAAA,EAAD,CACEL,MAAOC,GAAOqH,WAIhB,kBAACjH,EAAA,EAAD,CACEL,MAAOC,GAAOsH,QAEd,kBAAClH,EAAA,EAAD,CACEL,MAAOC,GAAOuH,cAEd,kBAACvD,EAAA,EAAD,CACEC,MAAM,SACNC,MAAM,UACNC,QAAS,WAEP0B,EAAQ,IACRtC,EAAgB,IAChBK,EAAmB,IACnBsD,EAAWM,SAAS,oBAK1B,kBAACpH,EAAA,EAAD,CACEL,MAAOC,GAAOyH,YAEd,kBAACzD,EAAA,EAAD,CACEC,MAAM,OACNC,MAAM,UACNC,QAAS,WACP1F,GAAetB,EAAMN,KAAKJ,WAAYoE,EAAMgD,GAC5CqD,EAAWM,SAAS,qBAM5B,kBAACpH,EAAA,EAAD,CACEL,MAAOC,GAAO0H,UAEd,kBAACf,GAAD,CACE5G,MAAOC,GAAO2H,UACdC,aAAc,SAAC/G,GACbgF,EAAQhF,IAEVhD,MAAOgD,EACPgH,YAAa,wBAIjB,kBAAC,GAAD,CACE9H,MAAOC,GAAO8H,YACdtE,aAAcA,EACdD,gBAAiBA,EACjBM,gBAAiBA,EACjBD,mBAAoBA,KAM5B,IAAM5D,GAAS0B,IAAWC,OAAO,CAC/ByF,UAAW,CACTxF,KAAM,GAGRyF,SAAU,CACRzF,KAAM,IAIR0F,OAAQ,CAEN1F,KAAM,GACNC,cAAe,MACfC,eAAgB,iBAGlByF,aAAc,CACZrJ,MAAO,GAAWH,GAClB+D,eAAgB,UAElB2F,WAAY,CACVvJ,MAAO,GAAWH,GAClB+D,eAAgB,UAGlB4F,SAAU,CACR9F,KAAM,EACNE,eAAgB,SAChBiG,WAAY,SACZC,OAAQ,IAAU7J,IAGpBwJ,UAAW,CACTM,SAAU,IAGZH,YAAa,CACXlG,KAAM,GACNE,eAAgB,gBC9Md/D,GAAcC,IAAWC,IAAI,UAAUC,MACxBF,IAAWC,IAAI,UAAUG,OAIhCE,EAAQ,IAASC,QAChBD,EAAQ,IAmBR,SAAS4J,KAAU,IAAD,EACL/G,qBAAWnE,GADN,qBAG/B,OACE,kBAACoD,EAAA,EAAD,CACEL,MAAOC,GAAOoH,WAEd,kBAAChH,EAAA,EAAD,CACEL,MAAOC,GAAOmI,cAIhB,kBAAC/H,EAAA,EAAD,CACEL,MAAOC,GAAOoI,eAEd,kBAAChI,EAAA,EAAD,CACEL,MAAOC,GAAOqI,iBAEd,kBAACrE,EAAA,EAAD,CACEC,MAAM,qBACNC,MAAM,UACNC,QAAS,WAEPtB,MAAM,MACNyF,OAAOxD,KAAK,+EAU1B,IAAM9E,GAAS0B,IAAWC,OAAO,CAC/ByF,UAAW,CACTxF,KAAM,EACNJ,SAAU,GAEZ2G,YAAa,CACXvG,KAAM,EACNI,gBAAiB,QAEnBoG,cAAe,CACbxG,KAAM,EACNC,cAAe,SACfC,eAAe,SACfiG,WAAY,SAEZ/F,gBAAiB,QAEnBqG,gBAAiB,CACfnK,MAAO,GAASH,MClFpB,mCAUA,IAAMwK,GAAMC,cAOG,SAASC,KACtB,OACE,kBAAC,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACH,GAAII,UAAL,CAAeC,iBAAiB,UAC9B,kBAACL,GAAIM,OAAL,CAAYC,KAAK,eAAeC,UAAW7H,IAC3C,kBAACqH,GAAIM,OAAL,CAAYC,KAAK,WAAWC,UAAW9B,KACvC,kBAACsB,GAAIM,OAAL,CAAYC,KAAK,SAASC,UAAWb,U,+DCtB3C,kBAAmBc,WACrBV,OAAOW,iBAAiB,QAAQ,WAC9BD,UAAUE,cACPC,SAAS,6BAA8B,CAAEC,MAAO,SAChDvK,MAAK,SAASwK,OAGdjK,OAAM,SAASC,GACdlD,QAAQkN,KAAK,oCAAqChK,U,mBCA1D,IAAIiK,EAAOhL,EAAQ,KACfiL,EAAOD,EACPE,EAASC,SAAS,cAATA,GAEbF,EAAKG,aAAa,iBAAkB,KAAMF,GAC1CD,EAAKG,aAAa,eAAgB,KAAMF,GACxCD,EAAKG,aAAa,uBAAwB,KAAMF,GAWhDG,MAAMrJ,OAAS,SAASsJ,GACtBN,EAAKO,QAAQC,WAAWhG,KAAM8F,EAAU,GAAI,EAAGD,MAAMrJ,OAAOyJ,gBAAiB,OAE/ER,EAAKS,SAASL,MAAMrJ,OAAQgJ,EAAKO,SAC7BN,EAAKU,QAAUC,WAKjBP,MAAMrJ,OAAO6J,YAAc,gBAY7BR,MAAMrJ,OAAO8J,QAAU,SAASR,GAC9BN,EAAKO,QAAQC,WAAWhG,KAAM8F,EAAU,GAAI,EAAGD,MAAMrJ,OAAO8J,QAAQL,gBAAiB,OAEvFR,EAAKS,SAASL,MAAMrJ,OAAO8J,QAASd,EAAKO,SACrCN,EAAKU,QAAUC,WAKjBP,MAAMrJ,OAAO8J,QAAQD,YAAc,wBAYrCR,MAAM3K,SAAW,SAAS4K,GACxBN,EAAKO,QAAQC,WAAWhG,KAAM8F,EAAU,GAAI,EAAGD,MAAM3K,SAAS+K,gBAAiB,OAEjFR,EAAKS,SAASL,MAAM3K,SAAUsK,EAAKO,SAC/BN,EAAKU,QAAUC,WAKjBP,MAAM3K,SAASmL,YAAc,kBAQ/BR,MAAMrJ,OAAOyJ,gBAAkB,CAAC,GAI5BT,EAAKO,QAAQQ,qBAajBV,MAAMrJ,OAAOgK,UAAUC,SAAW,SAASC,GACzC,OAAOb,MAAMrJ,OAAOiK,SAASC,EAAqB1G,OAapD6F,MAAMrJ,OAAOiK,SAAW,SAASE,EAAiBC,GAChD,IAAOC,EAAM,CACX3J,KAAMsI,EAAKO,QAAQe,oBAAoBF,EAAK,EAAG,IAC/CG,YAAavB,EAAKO,QAAQiB,aAAaJ,EAAIjK,iBAC3CkJ,MAAMrJ,OAAO8J,QAAQG,SAAUE,IAMjC,OAHIA,IACFE,EAAII,qBAAuBL,GAEtBC,IAUThB,MAAMrJ,OAAOrB,kBAAoB,SAASiH,GACxC,IAAIxB,EAAS,IAAI4E,EAAK0B,aAAa9E,GAC/BwE,EAAM,IAAIf,MAAMrJ,OACpB,OAAOqJ,MAAMrJ,OAAO2K,4BAA4BP,EAAKhG,IAWvDiF,MAAMrJ,OAAO2K,4BAA8B,SAASP,EAAKhG,GACvD,KAAOA,EAAOwG,cACRxG,EAAOyG,cADc,CAKzB,OADYzG,EAAO0G,kBAEnB,KAAK,EACH,IAAIvN,EAA+B6G,EAAO2G,aAC1CX,EAAIY,QAAQzN,GACZ,MACF,KAAK,EACCA,EAAQ,IAAI8L,MAAMrJ,OAAO8J,QAC7B1F,EAAO6G,YAAY1N,EAAM8L,MAAMrJ,OAAO8J,QAAQa,6BAC9CP,EAAI9E,WAAW/H,GACf,MACF,QACE6G,EAAO8G,aAIX,OAAOd,GAQTf,MAAMrJ,OAAOgK,UAAUvE,gBAAkB,WACvC,IAAI0F,EAAS,IAAInC,EAAKoC,aAEtB,OADA/B,MAAMrJ,OAAOqL,wBAAwB7H,KAAM2H,GACpCA,EAAOG,mBAWhBjC,MAAMrJ,OAAOqL,wBAA0B,SAASE,EAASJ,GACvD,IAAIK,OAAIC,GACRD,EAAID,EAAQ5K,WACN+K,OAAS,GACbP,EAAOQ,YACL,EACAH,IAGJA,EAAID,EAAQpL,kBACNuL,OAAS,GACbP,EAAOS,qBACL,EACAJ,EACAnC,MAAMrJ,OAAO8J,QAAQuB,0BAY3BhC,MAAMrJ,OAAO8J,QAAQL,gBAAkB,CAAC,GAIpCT,EAAKO,QAAQQ,qBAajBV,MAAMrJ,OAAO8J,QAAQE,UAAUC,SAAW,SAASC,GACjD,OAAOb,MAAMrJ,OAAO8J,QAAQG,SAASC,EAAqB1G,OAa5D6F,MAAMrJ,OAAO8J,QAAQG,SAAW,SAASE,EAAiBC,GACxD,IAAIoB,EAAGnB,EAAM,CACX3J,KAAMsI,EAAKO,QAAQe,oBAAoBF,EAAK,EAAG,IAC/C7J,KAAMyI,EAAKO,QAAQe,oBAAoBF,EAAK,EAAG,IAC/CyB,UAA0D,OAA9CL,EAAIxC,EAAKO,QAAQuC,iBAAiB1B,EAAK,SAAcqB,EAAYD,GAM/E,OAHIrB,IACFE,EAAII,qBAAuBL,GAEtBC,IAUThB,MAAMrJ,OAAO8J,QAAQnL,kBAAoB,SAASiH,GAChD,IAAIxB,EAAS,IAAI4E,EAAK0B,aAAa9E,GAC/BwE,EAAM,IAAIf,MAAMrJ,OAAO8J,QAC3B,OAAOT,MAAMrJ,OAAO8J,QAAQa,4BAA4BP,EAAKhG,IAW/DiF,MAAMrJ,OAAO8J,QAAQa,4BAA8B,SAASP,EAAKhG,GAC/D,KAAOA,EAAOwG,cACRxG,EAAOyG,cADc,CAKzB,OADYzG,EAAO0G,kBAEnB,KAAK,EACH,IAAIvN,EAA+B6G,EAAO2G,aAC1CX,EAAIY,QAAQzN,GACZ,MACF,KAAK,EACCA,EAA+B6G,EAAO2G,aAC1CX,EAAI7E,QAAQhI,GACZ,MACF,KAAK,EACCA,EAA+B6G,EAAO2G,aAC1CX,EAAI2B,SAASxO,GACb,MACF,QACE6G,EAAO8G,aAIX,OAAOd,GAQTf,MAAMrJ,OAAO8J,QAAQE,UAAUvE,gBAAkB,WAC/C,IAAI0F,EAAS,IAAInC,EAAKoC,aAEtB,OADA/B,MAAMrJ,OAAO8J,QAAQuB,wBAAwB7H,KAAM2H,GAC5CA,EAAOG,mBAWhBjC,MAAMrJ,OAAO8J,QAAQuB,wBAA0B,SAASE,EAASJ,GAC/D,IAAIK,OAAIC,GACRD,EAAID,EAAQ5K,WACN+K,OAAS,GACbP,EAAOQ,YACL,EACAH,IAGJA,EAAID,EAAQ/K,WACNkL,OAAS,GACbP,EAAOQ,YACL,EACAH,IAGJA,EAAID,EAAQ9K,gBACNiL,OAAS,GACbP,EAAOa,oBACL,EACAR,IAUNnC,MAAMrJ,OAAO8J,QAAQE,UAAUrJ,QAAU,WACvC,OAA8BqI,EAAKO,QAAQe,oBAAoB9G,KAAM,EAAG,KAQ1E6F,MAAMrJ,OAAO8J,QAAQE,UAAUgB,QAAU,SAASzN,GAChD,OAAOyL,EAAKO,QAAQ0C,qBAAqBzI,KAAM,EAAGjG,IAQpD8L,MAAMrJ,OAAO8J,QAAQE,UAAUxJ,QAAU,WACvC,OAA8BwI,EAAKO,QAAQe,oBAAoB9G,KAAM,EAAG,KAQ1E6F,MAAMrJ,OAAO8J,QAAQE,UAAUzE,QAAU,SAAShI,GAChD,OAAOyL,EAAKO,QAAQ0C,qBAAqBzI,KAAM,EAAGjG,IAQpD8L,MAAMrJ,OAAO8J,QAAQE,UAAUvJ,aAAe,WAC5C,OAAsCuI,EAAKO,QAAQuC,iBAAiBtI,KAAM,IAQ5E6F,MAAMrJ,OAAO8J,QAAQE,UAAUxE,aAAe,SAASjI,GACrD,OAAOyL,EAAKO,QAAQ2C,SAAS1I,KAAM,EAAGjG,GAAS,KASjD8L,MAAMrJ,OAAO8J,QAAQE,UAAU+B,SAAW,SAASxO,EAAO4O,GACxD,OAAOnD,EAAKO,QAAQ6C,mBAAmB5I,KAAM,EAAGjG,EAAO4O,IAQzD9C,MAAMrJ,OAAO8J,QAAQE,UAAUqC,eAAiB,WAC9C,OAAO7I,KAAKgC,aAAa,KAQ3B6D,MAAMrJ,OAAOgK,UAAUrJ,QAAU,WAC/B,OAA8BqI,EAAKO,QAAQe,oBAAoB9G,KAAM,EAAG,KAQ1E6F,MAAMrJ,OAAOgK,UAAUgB,QAAU,SAASzN,GACxC,OAAOyL,EAAKO,QAAQ0C,qBAAqBzI,KAAM,EAAGjG,IAQpD8L,MAAMrJ,OAAOgK,UAAU7J,eAAiB,WACtC,OACE6I,EAAKO,QAAQ+C,wBAAwB9I,KAAM6F,MAAMrJ,OAAO8J,QAAS,IAQrET,MAAMrJ,OAAOgK,UAAUuC,eAAiB,SAAShP,GAC/C,OAAOyL,EAAKO,QAAQiD,wBAAwBhJ,KAAM,EAAGjG,IASvD8L,MAAMrJ,OAAOgK,UAAU1E,WAAa,SAASmH,EAAWN,GACtD,OAAOnD,EAAKO,QAAQmD,0BAA0BlJ,KAAM,EAAGiJ,EAAWpD,MAAMrJ,OAAO8J,QAASqC,IAQ1F9C,MAAMrJ,OAAOgK,UAAU2C,iBAAmB,WACxC,OAAOnJ,KAAK+I,eAAe,KAU7BlD,MAAM3K,SAAS+K,gBAAkB,CAAC,GAI9BT,EAAKO,QAAQQ,qBAajBV,MAAM3K,SAASsL,UAAUC,SAAW,SAASC,GAC3C,OAAOb,MAAM3K,SAASuL,SAASC,EAAqB1G,OAatD6F,MAAM3K,SAASuL,SAAW,SAASE,EAAiBC,GAClD,IAAOC,EAAM,CACXuC,WAAY5D,EAAKO,QAAQiB,aAAaJ,EAAIvL,gBAC1CwK,MAAMrJ,OAAOiK,SAAUE,IAMzB,OAHIA,IACFE,EAAII,qBAAuBL,GAEtBC,IAUThB,MAAM3K,SAASC,kBAAoB,SAASiH,GAC1C,IAAIxB,EAAS,IAAI4E,EAAK0B,aAAa9E,GAC/BwE,EAAM,IAAIf,MAAM3K,SACpB,OAAO2K,MAAM3K,SAASiM,4BAA4BP,EAAKhG,IAWzDiF,MAAM3K,SAASiM,4BAA8B,SAASP,EAAKhG,GACzD,KAAOA,EAAOwG,cACRxG,EAAOyG,cADc,CAKzB,OADYzG,EAAO0G,kBAEnB,KAAK,EACH,IAAIvN,EAAQ,IAAI8L,MAAMrJ,OACtBoE,EAAO6G,YAAY1N,EAAM8L,MAAMrJ,OAAO2K,6BACtCP,EAAIyC,UAAUtP,GACd,MACF,QACE6G,EAAO8G,aAIX,OAAOd,GAQTf,MAAM3K,SAASsL,UAAUvE,gBAAkB,WACzC,IAAI0F,EAAS,IAAInC,EAAKoC,aAEtB,OADA/B,MAAM3K,SAAS2M,wBAAwB7H,KAAM2H,GACtCA,EAAOG,mBAWhBjC,MAAM3K,SAAS2M,wBAA0B,SAASE,EAASJ,GACzD,IAAIK,GACJA,EAAID,EAAQ1M,iBACN6M,OAAS,GACbP,EAAOS,qBACL,EACAJ,EACAnC,MAAMrJ,OAAOqL,0BAUnBhC,MAAM3K,SAASsL,UAAUnL,cAAgB,WACvC,OACEmK,EAAKO,QAAQ+C,wBAAwB9I,KAAM6F,MAAMrJ,OAAQ,IAQ7DqJ,MAAM3K,SAASsL,UAAU8C,cAAgB,SAASvP,GAChD,OAAOyL,EAAKO,QAAQiD,wBAAwBhJ,KAAM,EAAGjG,IASvD8L,MAAM3K,SAASsL,UAAU6C,UAAY,SAASJ,EAAWN,GACvD,OAAOnD,EAAKO,QAAQmD,0BAA0BlJ,KAAM,EAAGiJ,EAAWpD,MAAMrJ,OAAQmM,IAQlF9C,MAAM3K,SAASsL,UAAU+C,gBAAkB,WACzC,OAAOvJ,KAAKsJ,cAAc,KAI5B7D,EAAK+D,OAAOC,OAAOC,EAAS7D,S","file":"static/js/app.236ba3c2.chunk.js","sourcesContent":["import React, {createContext, useReducer} from 'react';\nimport { Platform } from 'react-native'\n\nlet host = \"http://127.0.0.1\"\nlet port = \"8888\"\nif (Platform.OS == \"web\") {\n  console.log(\"hi, web\")\n  host = location.protocol + '//' + document.domain + ':' + port //location.protocol + '//' + document.domain + ':' + location.port\n} else {\n  //host = 'http://' + \"192.168.31.38\" + ':' + port\n  host = 'http://' + \"192.168.49.31\" + ':' + port\n}\n\nconst upload_url = host + \"/api/v1/upload\"\nconst get_url = host + \"/api/v1/get\"\n\nconst initialState = {\n    platform: Platform.OS,\n    urls: {\n        host: host,\n        upload_url: upload_url,\n        get_url: get_url,\n    },\n    oneday_list: [],\n    fetched_at_boot: false,\n};\nexport const store = createContext(null);\n\nconst reducer = (state, action) => {\nswitch(action.type) {\n    case 'setOnedayList':\n      return {\n        ...state,\n        oneday_list: action.payload,\n        fetched_at_boot: true,\n      };\n    default:\n      throw new Error();\n  }\n};\n\nexport const StateProvider = props => {\n    const [state, dispatch] = useReducer(reducer, initialState)\n\n    return (\n        <store.Provider value={[ state, dispatch ]}>\n            {props.children}\n        </store.Provider>\n    )\n}","import React, { useContext, useEffect, useState } from 'react';\nimport { StyleSheet, Text, View, ScrollView, Image } from 'react-native';\nimport { TextInput, Button } from 'react-native';\n\nimport { Dimensions } from 'react-native';\nconst windowWidth = Dimensions.get('window').width;\nconst windowHeight = Dimensions.get('window').height;\n\nimport { store } from '../Store';\n\nconst axios = require('axios').default;\nvar messages = require('../protocol/everyday_pb');\n\nasync function make_a_request(state) {\n  return axios.post(state.urls.get_url, {\n    action: 'get_everyday',\n  })\n  .then(function (response: any) {\n    //console.log(response);\n    let data = response.data;\n    let everyday = messages.EveryDay.deserializeBinary(data.sql)\n    //console.log(everyday)\n    let oneday_list = everyday.getOnedayList()\n    //console.log(oneday_list)\n    /*\n    oneday_list.map((oneday) => {\n      console.log(oneday.getDate())\n      let contents = oneday.getContentList()\n      contents.map((content, index) => {\n        let images = content.getImageList()\n        if (images) {\n          images.map((image, index) => {\n            console.log(image)\n          })\n        }\n      })\n    })\n    */\n    return oneday_list\n  })\n  .catch(function (error: any) {\n    console.log(error);\n  });\n}\n\nfunction Images(props) {\n  let {image_list} = props\n  let images_view = []\n\n  image_list.map((image_data_uri, index) => {\n    images_view.push(\n      <Image\n        key={index}\n        style={styles.image}\n        source={{\n          uri: image_data_uri\n        }}\n      />\n    )\n  })\n\n  return (\n    <View\n      style={styles.images}\n    >\n      {images_view}\n    </View>\n  )\n}\n\nfunction OneDay(props) {\n  let {oneday} = props\n  let content_list = oneday.getContentList()\n\n  let content_view = []\n  content_list.map((content, index) => {\n    //console.log(content.getImageList())\n    content_view.push(\n      <View\n        style={styles.content}\n        key={index}\n      >\n\n        <Text\n          style={styles.text}\n        >\n          {content.getText()}\n        </Text>\n\n        <Images\n          image_list={content.getImageList()}\n        >\n        </Images>\n\n      </View>\n    )\n  })\n\n  return (\n    <View\n      style={styles.oneday}\n    >\n      <Text\n        style={styles.date}\n      >{oneday.getDate()}\n      </Text>\n\n      {content_view}\n    </View>\n  )\n}\n\nexport default function History() {\n  const [state, dispatch] = useContext(store)\n\n  async function getData() {\n    let oneday_list = await make_a_request(state)\n    dispatch({type: \"setOnedayList\", payload: oneday_list})\n  }\n\n  let everyday_view = []\n  if (state.fetched_at_boot == false) {\n    getData()\n  } else {\n    state.oneday_list.map((oneday, index) => {\n      //console.log(oneday.getDate())\n      everyday_view.push(\n        <OneDay\n          key={index}\n          oneday={oneday}\n        >\n        </OneDay>\n      )\n    })\n  }\n\n  return (\n    <ScrollView\n      contentContainerStyle={{ flexGrow: 1 }}\n    >\n      <View style={styles.everyday}>\n          {everyday_view}\n      </View>\n    </ScrollView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  everyday: {\n    //justifyContent: 'center', alignItems: 'center', \n    flex: 1, \n    flexDirection: 'column',\n    //justifyContent: \"space-between\",\n    justifyContent: \"flex-start\",\n  },\n  oneday: {\n    width: windowWidth,\n    marginVertical: 1/100 * windowHeight,\n    backgroundColor: \"#fff\",\n  },\n  date: {\n    textAlign: 'center', // <-- the magic\n    marginBottom: 1/100 * windowHeight,\n  },\n  content: {\n  },\n  text: {\n    textAlign: 'center', // <-- the magic\n  },\n  images: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignContent: \"stretch\",\n    flexWrap: \"wrap\",\n  },\n  image: {\n    width: 33.3/100*windowWidth, \n    height: 33.3/100*windowWidth,\n    resizeMode: 'contain',\n  }\n});","import * as React from 'react';\nimport { Button, Image, View } from 'react-native';\nimport * as ImagePicker from 'expo-image-picker';\nimport Constants from 'expo-constants';\nimport * as Permissions from 'expo-permissions';\n\nimport {Dimensions} from 'react-native';\nconst windowWidth = Dimensions.get('window').width;\nconst windowHeight = Dimensions.get('window').height;\n\nimport { StyleSheet } from 'react-native';\n\ntype MyImagePickerProps = {\n  imageUriList: Array<String>\n  setImageUriList: Function\n  imageBase64List: Array<String>\n  setImageBase64List: Function\n}\n\nexport default class MyImagePicker extends React.Component<MyImagePickerProps> {\n  render() {\n    return (\n      <View \n        {...this.props}\n      >\n        <View\n          style={styles.pickImageButton}\n        >\n          <Button \n            title=\"Pick an image\" \n            color=\"#FFCC80\"\n            onPress={this._pickImage} \n          />\n        </View>\n\n        <View\n          style={styles.imageBox}\n        >\n          {\n            this.props.imageUriList.map((value, index) => {\n                return (\n                  <View\n                    style={styles.image}\n                    key={index}\n                  >\n                    <Image key={index} source={{ uri: value }} style={styles.image}/>\n                  </View>\n                )\n            })\n          }\n        </View>\n      </View>\n    );\n  }\n\n  componentDidMount() {\n    this.getPermissionAsync();\n  }\n\n  getPermissionAsync = async () => {\n    if (Constants.platform.ios) {\n      const { status } = await Permissions.askAsync(Permissions.CAMERA_ROLL);\n      if (status !== 'granted') {\n        alert('Sorry, we need camera roll permissions to make this work!');\n      }\n    }\n  };\n\n  toDataUrl(url: string, callback: Function) {\n      let self = this\n      var xhr = new XMLHttpRequest();\n      xhr.onload = function() {\n          var reader = new FileReader();\n          reader.onloadend = function() {\n              callback(self, reader.result);\n          }\n          reader.readAsDataURL(xhr.response);\n      };\n      xhr.open('GET', url);\n      xhr.responseType = 'blob';\n      xhr.send();\n  }\n\n  _pickImage = async () => {\n    try {\n      let result = await ImagePicker.launchImageLibraryAsync({\n        mediaTypes: ImagePicker.MediaTypeOptions.Images,\n        base64: true,\n        allowsEditing: true,\n        aspect: [4, 3],\n        quality: 1,\n      });\n      if (!result.cancelled) {\n        this.props.setImageUriList([...this.props.imageUriList, result.uri])\n        //console.log(result[\"base64\"]) //It should work, but not\n        this.toDataUrl(result.uri, function(self, mybase64) {\n          self.props.setImageBase64List([...self.props.imageBase64List, mybase64])\n          //console.log(mybase64)\n        })\n      }\n    } catch (E) {\n      console.log(E);\n    }\n  };\n}\n\nconst styles = StyleSheet.create({\n  pickImageButton: {\n    marginBottom: 0.5/100*windowHeight,\n  },\n  imageBox: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"flex-start\",\n    alignContent: \"stretch\",\n    flexWrap: \"wrap\",\n  },\n  image: {\n    width: 33.3/100*windowWidth, \n    height: 33.3/100*windowWidth,\n  }\n});\n","import React, { useContext } from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { TextInput, Button } from 'react-native';\n\nimport { Dimensions } from 'react-native';\nconst windowWidth = Dimensions.get('window').width;\nconst windowHeight = Dimensions.get('window').height;\n\nimport { store } from '../Store';\nimport MyImagePicker from \"./ImagePicker\";\n\nconst axios = require('axios').default;\nvar messages = require('../protocol/everyday_pb');\n\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\nconst Base64 = {\n  btoa: (input: string = '') => {\n    let str = input;\n    let output = '';\n\n    for (let block = 0, charCode, i = 0, map = chars;\n      str.charAt(i | 0) || (map = '=', i % 1);\n      output += map.charAt(63 & block >> 8 - i % 1 * 8)) {\n\n      charCode = str.charCodeAt(i += 3 / 4);\n\n      if (charCode > 0xFF) {\n        throw new Error(\"'btoa' failed: The string to be encoded contains characters outside of the Latin1 range.\");\n      }\n\n      block = block << 8 | charCode;\n    }\n\n    return output;\n  },\n\n  atob: (input: string = '') => {\n    let str = input.replace(/=+$/, '');\n    let output = '';\n\n    if (str.length % 4 == 1) {\n      throw new Error(\"'atob' failed: The string to be decoded is not correctly encoded.\");\n    }\n    for (let bc = 0, bs = 0, buffer, i = 0;\n      buffer = str.charAt(i++);\n\n      ~buffer && (bs = bc % 4 ? bs * 64 + buffer : buffer,\n        bc++ % 4) ? output += String.fromCharCode(255 & bs >> (-2 * bc & 6)) : 0\n    ) {\n      buffer = chars.indexOf(buffer);\n    }\n\n    return output;\n  }\n};\n\nfunction arrayBufferToBase64(buffer: Iterable<number>) {\n  let binary = '';\n  let bytes = new Uint8Array(buffer);\n  let len = bytes.byteLength;\n  for (let i = 0; i < len; i++) {\n    binary += String.fromCharCode(bytes[i]);\n  }\n  return Base64.btoa(Base64.btoa(binary));\n}\n\nfunction make_a_request(url: String, text: String, imageBase64List: Array<String>) {\n  var oneday = new messages.OneDay()\n  let content = oneday.addContent()\n  content.setText(text)\n  content.setImageList(imageBase64List)\n  let data = oneday.serializeBinary()\n  data = arrayBufferToBase64(data)\n  //console.log(data)\n  axios.post(url, {\n    action: 'oneday',\n    data: data,\n  })\n  .then(function (response: any) {\n    console.log(response);\n    setTimeout(()=>{\n      location.reload();\n    }, 1000)\n  })\n  .catch(function (error: any) {\n    console.log(error);\n  });\n}\n\nfunction UselessTextInput(props) {\n  return (\n    <TextInput\n      {...props} // Inherit any props passed to it; e.g., multiline, numberOfLines below\n      editable\n      multiline\n      numberOfLines={8}\n      maxLength={40}\n    />\n  );\n}\n\nexport default function Editor( {navigation} ) {\n  const [text, setText] = React.useState<String>('');\n  const [imageUriList, setImageUriList] = React.useState<Array<String>>([]);\n  const [imageBase64List, setImageBase64List] = React.useState<Array<String>>([]);\n\n  const [state, dispatch] = useContext(store)\n\n  return (\n    <View style={styles.container}>\n      <View\n        style={styles.topWhite}\n      >\n      </View>\n\n      <View\n        style={styles.topBar}\n      >\n        <View\n          style={styles.cancelButton}\n        >\n          <Button\n            title=\"Cancel\"\n            color=\"#90A4AE\"\n            onPress={() => {\n              //make_a_request(text, imageUriList)\n              setText(\"\")\n              setImageUriList([])\n              setImageBase64List([])\n              navigation.navigate('Your History')\n            }}\n          >\n          </Button>\n        </View>\n        <View\n          style={styles.saveButton}\n        >\n          <Button\n            title=\"Save\"\n            color=\"#FF5252\"\n            onPress={() => {\n              make_a_request(state.urls.upload_url, text, imageBase64List)\n              navigation.navigate('Your History')\n            }}\n          />\n        </View>\n      </View>\n\n      <View\n        style={styles.inputBox}\n      >\n        <UselessTextInput\n          style={styles.textInput}\n          onChangeText={(text: string) => {\n            setText(text)\n          }}\n          value={text}\n          placeholder={\"What's happenning?\"}\n        />\n      </View>\n\n      <MyImagePicker\n        style={styles.imagePicker}\n        imageUriList={imageUriList}\n        setImageUriList={setImageUriList}\n        imageBase64List={imageBase64List}\n        setImageBase64List={setImageBase64List}\n      />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n\n  topWhite: {\n    flex: 0.5,\n    //backgroundColor: \"#fff\",\n  },\n\n  topBar: {\n    //https://reactnative.dev/docs/flexbox\n    flex: 0.8,\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    //backgroundColor: \"#81D4FA\"\n  },\n  cancelButton: {\n    width: 20 / 100 * windowWidth,\n    justifyContent: \"center\",\n  },\n  saveButton: {\n    width: 20 / 100 * windowWidth,\n    justifyContent: \"center\",\n  },\n\n  inputBox: {\n    flex: 6,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    margin: 2 / 100 * windowHeight,\n    //backgroundColor: \"#E57373\",\n  },\n  textInput: {\n    fontSize: 24,\n  },\n\n  imagePicker: {\n    flex: 10,\n    justifyContent: \"flex-start\",\n    //backgroundColor: \"#AB47BC\"\n  },\n});","import React, { useContext, useEffect, useState } from 'react';\nimport { StyleSheet, Text, View, ScrollView, Image } from 'react-native';\nimport { TextInput, Button } from 'react-native';\n\nimport { Dimensions } from 'react-native';\nconst windowWidth = Dimensions.get('window').width;\nconst windowHeight = Dimensions.get('window').height;\n\nimport { store } from '../Store';\n\nconst axios = require('axios').default;\nvar messages = require('../protocol/everyday_pb');\n\nasync function make_a_request(state) {\n  return axios.post(state.urls.get_url, {\n    action: 'get_everyday',\n  })\n  .then(function (response: any) {\n    //console.log(response);\n    let data = response.data;\n    let everyday = messages.EveryDay.deserializeBinary(data.sql)\n    //console.log(everyday)\n    let oneday_list = everyday.getOnedayList()\n    return oneday_list\n  })\n  .catch(function (error: any) {\n    console.log(error);\n  });\n}\n\nexport default function Search() {\n  const [state, dispatch] = useContext(store)\n\n  return (\n    <View\n      style={styles.container}\n    >\n      <View\n        style={styles.search_area}\n      >\n\n      </View>\n      <View\n        style={styles.download_area}\n      >\n        <View\n          style={styles.download_button}\n        >\n          <Button\n            title=\"Download Your Data\"\n            color=\"#90A4AE\"\n            onPress={() => {\n              //make_a_request(text, imageUriList)\n              alert(\"hi\")\n              window.open(\"http://releases.ubuntu.com/12.04.5/ubuntu-12.04.5-alternate-amd64.iso\")\n            }}\n          >\n          </Button>\n        </View>\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexGrow: 1,\n  },\n  search_area: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n  },\n  download_area: {\n    flex: 1,\n    flexDirection: \"column\",\n    justifyContent:\"center\",\n    alignItems: \"center\",\n    //backgroundColor: \"#000\",\n    backgroundColor: \"#fff\",\n  },\n  download_button: {\n    width: 50/100 * windowWidth,\n  }\n});","import React, { useState, useContext } from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { TextInput, Button } from 'react-native';\n\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\n//import { createStackNavigator } from '@react-navigation/stack';\n//import { createDrawerNavigator } from '@react-navigation/drawer';\n//const Stack = createStackNavigator();\n//const Drawer = createDrawerNavigator();\nconst Tab = createBottomTabNavigator();\n\nimport { StateProvider } from './Store';\nimport History from \"./components/History\";\nimport Editor from \"./components/Editor\";\nimport Search from \"./components/Search\";\n\nexport default function App() {\n  return (\n    <StateProvider>\n      <NavigationContainer>\n        <Tab.Navigator initialRouteName=\"Search\">\n          <Tab.Screen name=\"Your History\" component={History} />\n          <Tab.Screen name=\"Add More\" component={Editor} />\n          <Tab.Screen name=\"Search\" component={Search} />\n        </Tab.Navigator>\n      </NavigationContainer>\n    </StateProvider>\n  );\n}","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function() {\n    navigator.serviceWorker\n      .register('/ui/expo-service-worker.js', { scope: '/ui/' })\n      .then(function(info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function(error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","// source: everyday.proto\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\ngoog.exportSymbol('proto.EveryDay', null, global);\ngoog.exportSymbol('proto.OneDay', null, global);\ngoog.exportSymbol('proto.OneDay.Content', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.OneDay = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.OneDay.repeatedFields_, null);\n};\ngoog.inherits(proto.OneDay, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.OneDay.displayName = 'proto.OneDay';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.OneDay.Content = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.OneDay.Content.repeatedFields_, null);\n};\ngoog.inherits(proto.OneDay.Content, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.OneDay.Content.displayName = 'proto.OneDay.Content';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.EveryDay = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.EveryDay.repeatedFields_, null);\n};\ngoog.inherits(proto.EveryDay, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.EveryDay.displayName = 'proto.EveryDay';\n}\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.OneDay.repeatedFields_ = [2];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.OneDay.prototype.toObject = function(opt_includeInstance) {\n  return proto.OneDay.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.OneDay} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.OneDay.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    date: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    contentList: jspb.Message.toObjectList(msg.getContentList(),\n    proto.OneDay.Content.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.OneDay}\n */\nproto.OneDay.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.OneDay;\n  return proto.OneDay.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.OneDay} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.OneDay}\n */\nproto.OneDay.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setDate(value);\n      break;\n    case 2:\n      var value = new proto.OneDay.Content;\n      reader.readMessage(value,proto.OneDay.Content.deserializeBinaryFromReader);\n      msg.addContent(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.OneDay.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.OneDay.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.OneDay} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.OneDay.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getDate();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getContentList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      2,\n      f,\n      proto.OneDay.Content.serializeBinaryToWriter\n    );\n  }\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.OneDay.Content.repeatedFields_ = [3];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.OneDay.Content.prototype.toObject = function(opt_includeInstance) {\n  return proto.OneDay.Content.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.OneDay.Content} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.OneDay.Content.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    date: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    text: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    imageList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.OneDay.Content}\n */\nproto.OneDay.Content.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.OneDay.Content;\n  return proto.OneDay.Content.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.OneDay.Content} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.OneDay.Content}\n */\nproto.OneDay.Content.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setDate(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setText(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.addImage(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.OneDay.Content.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.OneDay.Content.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.OneDay.Content} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.OneDay.Content.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getDate();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getText();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getImageList();\n  if (f.length > 0) {\n    writer.writeRepeatedString(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string date = 1;\n * @return {string}\n */\nproto.OneDay.Content.prototype.getDate = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.OneDay.Content} returns this\n */\nproto.OneDay.Content.prototype.setDate = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string text = 2;\n * @return {string}\n */\nproto.OneDay.Content.prototype.getText = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.OneDay.Content} returns this\n */\nproto.OneDay.Content.prototype.setText = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * repeated string image = 3;\n * @return {!Array<string>}\n */\nproto.OneDay.Content.prototype.getImageList = function() {\n  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));\n};\n\n\n/**\n * @param {!Array<string>} value\n * @return {!proto.OneDay.Content} returns this\n */\nproto.OneDay.Content.prototype.setImageList = function(value) {\n  return jspb.Message.setField(this, 3, value || []);\n};\n\n\n/**\n * @param {string} value\n * @param {number=} opt_index\n * @return {!proto.OneDay.Content} returns this\n */\nproto.OneDay.Content.prototype.addImage = function(value, opt_index) {\n  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.OneDay.Content} returns this\n */\nproto.OneDay.Content.prototype.clearImageList = function() {\n  return this.setImageList([]);\n};\n\n\n/**\n * optional string date = 1;\n * @return {string}\n */\nproto.OneDay.prototype.getDate = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.OneDay} returns this\n */\nproto.OneDay.prototype.setDate = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * repeated Content content = 2;\n * @return {!Array<!proto.OneDay.Content>}\n */\nproto.OneDay.prototype.getContentList = function() {\n  return /** @type{!Array<!proto.OneDay.Content>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.OneDay.Content, 2));\n};\n\n\n/**\n * @param {!Array<!proto.OneDay.Content>} value\n * @return {!proto.OneDay} returns this\n*/\nproto.OneDay.prototype.setContentList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 2, value);\n};\n\n\n/**\n * @param {!proto.OneDay.Content=} opt_value\n * @param {number=} opt_index\n * @return {!proto.OneDay.Content}\n */\nproto.OneDay.prototype.addContent = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.OneDay.Content, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.OneDay} returns this\n */\nproto.OneDay.prototype.clearContentList = function() {\n  return this.setContentList([]);\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.EveryDay.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.EveryDay.prototype.toObject = function(opt_includeInstance) {\n  return proto.EveryDay.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.EveryDay} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.EveryDay.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    onedayList: jspb.Message.toObjectList(msg.getOnedayList(),\n    proto.OneDay.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.EveryDay}\n */\nproto.EveryDay.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.EveryDay;\n  return proto.EveryDay.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.EveryDay} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.EveryDay}\n */\nproto.EveryDay.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.OneDay;\n      reader.readMessage(value,proto.OneDay.deserializeBinaryFromReader);\n      msg.addOneday(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.EveryDay.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.EveryDay.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.EveryDay} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.EveryDay.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getOnedayList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.OneDay.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated OneDay oneday = 1;\n * @return {!Array<!proto.OneDay>}\n */\nproto.EveryDay.prototype.getOnedayList = function() {\n  return /** @type{!Array<!proto.OneDay>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.OneDay, 1));\n};\n\n\n/**\n * @param {!Array<!proto.OneDay>} value\n * @return {!proto.EveryDay} returns this\n*/\nproto.EveryDay.prototype.setOnedayList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.OneDay=} opt_value\n * @param {number=} opt_index\n * @return {!proto.OneDay}\n */\nproto.EveryDay.prototype.addOneday = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.OneDay, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.EveryDay} returns this\n */\nproto.EveryDay.prototype.clearOnedayList = function() {\n  return this.setOnedayList([]);\n};\n\n\ngoog.object.extend(exports, proto);\n"],"sourceRoot":""}